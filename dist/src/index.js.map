{"version":3,"sources":["../../src/index.js"],"names":["fileName","fileInput","document","getElementById","handleFile","e","console","log","preventDefaults","dataTransfer","files","target","length","load","myContainer","addEventListener","preventDefault","stopPropagation","container","options","autoInit","emptyContainer","createViewer","count","loadFile","updateCamera","renderer","getActiveCamera","fileURL","urls","concat","progressContainer","createElement","setAttribute","style","progress","appendChild","progressCallback","progressEvent","percent","Math","floor","loaded","total","innerHTML","nbURLs","nbLoadedData","url","pop","name","Array","isArray","userParams","fetchBinary","then","binary","removeChild","createPipeline"],"mappings":";;AAAA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMA,WAAW,YAAjB,C,CAA+B;;AAE/B;AACA;AACA;;AAEA;;;;;;;AAOA;AACA;AACA;;AAEA;;AAEA,IAAMC,YAAYC,SAASC,cAAT,CAAwB,WAAxB,CAAlB;;AAEA,SAASC,UAAT,CAAoBC,CAApB,EAAuB;AACnBC,YAAQC,GAAR,CAAYF,CAAZ;AACAG,oBAAgBH,CAAhB;AACA,QAAMI,eAAeJ,EAAEI,YAAvB;AACA,QAAMC,QAAQL,EAAEM,MAAF,CAASD,KAAT,IAAkBD,aAAaC,KAA7C;AACA,QAAIA,MAAME,MAAN,GAAe,CAAnB,EAAsB;AAClBC,aAAKC,WAAL,EAAkB,EAACJ,YAAD,EAAlB;AACH;AACJ;;AAEDT,UAAUc,gBAAV,CAA2B,QAA3B,EAAqCX,UAArC;;AAEA,SAASI,eAAT,CAAyBH,CAAzB,EAA4B;AACxBA,MAAEW,cAAF;AACAX,MAAEY,eAAF;AACH;;AAED,SAASJ,IAAT,CAAcK,SAAd,EAAyBC,OAAzB,EAAkC;AAC9BC,eAAW,KAAX;AACAC,mBAAeH,SAAf;;AAEA,QAAIC,QAAQT,KAAZ,EAAmB;AACfY,qBAAaJ,SAAb;AACA,YAAIK,QAAQJ,QAAQT,KAAR,CAAcE,MAA1B;AACA,eAAOW,OAAP,EAAgB;AACZC,qBAASL,QAAQT,KAAR,CAAca,KAAd,CAAT;AACH;AACDE,qBAAaC,SAASC,eAAT,EAAb;AACH,KAPD,MAOO,IAAIR,QAAQS,OAAZ,EAAqB;AAAA;AACxB,gBAAMC,OAAO,GAAGC,MAAH,CAAUX,QAAQS,OAAlB,CAAb;AACA,gBAAMG,oBAAoB7B,SAAS8B,aAAT,CAAuB,KAAvB,CAA1B;AACAD,8BAAkBE,YAAlB,CAA+B,OAA/B,EAAwCC,MAAMC,QAA9C;AACAjB,sBAAUkB,WAAV,CAAsBL,iBAAtB;;AAEA,gBAAMM,mBAAmB,SAAnBA,gBAAmB,CAACC,aAAD,EAAmB;AACxC,oBAAMC,UAAUC,KAAKC,KAAL,CACZ,MAAMH,cAAcI,MAApB,GAA6BJ,cAAcK,KAA3C,IAAoDd,KAAKjB,MAAL,GAAc,CAAlE,CADY,CAAhB;AAGAmB,kCAAkBa,SAAlB,gBAAyCL,OAAzC;AACH,aALD;;AAOAjB,yBAAaJ,SAAb;AACA,gBAAM2B,SAAShB,KAAKjB,MAApB;AACA,gBAAIkC,eAAe,CAAnB;;AAEA;;AAjBwB;AAmBpB,oBAAMC,MAAMlB,KAAKmB,GAAL,EAAZ;AACA,oBAAMC,OAAOC,MAAMC,OAAN,CAAcC,WAAWH,IAAzB,IACPG,WAAWH,IAAX,CAAgBpB,KAAKjB,MAArB,CADO,cAECiB,KAAKjB,MAAL,GAAc,CAFf,CAAb;AAGA,+CAAqByC,WAArB,CAAiCN,GAAjC,EAAsC;AAClCV;AADkC,iBAAtC,EAEGiB,IAFH,CAEQ,UAACC,MAAD,EAAY;AAChBT;AACA,wBAAIA,iBAAiBD,MAArB,EAA6B;AACzB3B,kCAAUsC,WAAV,CAAsBzB,iBAAtB;AACH;AACD0B,mCAAeR,IAAf,EAAqBM,MAArB;AACA9B,iCAAaC,SAASC,eAAT,EAAb;AACH,iBATD;AAvBoB;;AAkBxB,mBAAOE,KAAKjB,MAAZ,EAAoB;AAAA;AAenB;AAjCuB;AAkC3B;AACJ;;AAGD;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;;AAEA","file":"index.js","sourcesContent":["import 'vtk.js/Sources/favicon';\r\n\r\nimport vtkActor from 'vtk.js/Sources/Rendering/Core/Actor';\r\nimport vtkFullScreenRenderWindow from 'vtk.js/Sources/Rendering/Misc/FullScreenRenderWindow';\r\nimport vtkMapper from 'vtk.js/Sources/Rendering/Core/Mapper';\r\nimport vtkPolyDataReader from 'vtk.js/Sources/IO/Legacy/PolyDataReader';\r\n\r\nimport HttpDataAccessHelper from 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper';\r\n\r\nconst fileName = 'sphere.vtk'; // 'uh60.vtk'; // 'luggaBody.vtk';\r\n\r\n// ----------------------------------------------------------------------------\r\n// Standard rendering code setup\r\n// ----------------------------------------------------------------------------\r\n\r\n/*const fullScreenRenderer = vtkFullScreenRenderWindow.newInstance();\r\nconst renderer = fullScreenRenderer.getRenderer();\r\nconst renderWindow = fullScreenRenderer.getRenderWindow();\r\n\r\nconst resetCamera = renderer.resetCamera;\r\nconst render = renderWindow.render;*/\r\n\r\n// ----------------------------------------------------------------------------\r\n// Example code\r\n// ----------------------------------------------------------------------------\r\n\r\n/*const reader = vtkPolyDataReader.newInstance();*/\r\n\r\nconst fileInput = document.getElementById(\"fileInput\");\r\n\r\nfunction handleFile(e) {\r\n    console.log(e);\r\n    preventDefaults(e);\r\n    const dataTransfer = e.dataTransfer;\r\n    const files = e.target.files || dataTransfer.files;\r\n    if (files.length > 0) {\r\n        load(myContainer, {files});\r\n    }\r\n}\r\n\r\nfileInput.addEventListener('change', handleFile);\r\n\r\nfunction preventDefaults(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n}\r\n\r\nfunction load(container, options) {\r\n    autoInit = false;\r\n    emptyContainer(container);\r\n\r\n    if (options.files) {\r\n        createViewer(container);\r\n        let count = options.files.length;\r\n        while (count--) {\r\n            loadFile(options.files[count]);\r\n        }\r\n        updateCamera(renderer.getActiveCamera());\r\n    } else if (options.fileURL) {\r\n        const urls = [].concat(options.fileURL);\r\n        const progressContainer = document.createElement('div');\r\n        progressContainer.setAttribute('class', style.progress);\r\n        container.appendChild(progressContainer);\r\n\r\n        const progressCallback = (progressEvent) => {\r\n            const percent = Math.floor(\r\n                100 * progressEvent.loaded / progressEvent.total / (urls.length + 1)\r\n            );\r\n            progressContainer.innerHTML = `Loading ${percent}%`;\r\n        };\r\n\r\n        createViewer(container);\r\n        const nbURLs = urls.length;\r\n        let nbLoadedData = 0;\r\n\r\n        /* eslint-disable no-loop-func */\r\n        while (urls.length) {\r\n            const url = urls.pop();\r\n            const name = Array.isArray(userParams.name)\r\n                ? userParams.name[urls.length]\r\n                : `Data ${urls.length + 1}`;\r\n            HttpDataAccessHelper.fetchBinary(url, {\r\n                progressCallback,\r\n            }).then((binary) => {\r\n                nbLoadedData++;\r\n                if (nbLoadedData === nbURLs) {\r\n                    container.removeChild(progressContainer);\r\n                }\r\n                createPipeline(name, binary);\r\n                updateCamera(renderer.getActiveCamera());\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/*reader.setUrl(`/dist/dist/bunny.vtk`).then(() => {\r\n    const polydata = reader.getOutputData(0);\r\n    const mapper = vtkMapper.newInstance();\r\n    const actor = vtkActor.newInstance();\r\n\r\n    actor.setMapper(mapper);\r\n    mapper.setInputData(polydata);\r\n\r\n    renderer.addActor(actor);\r\n\r\n    resetCamera();\r\n    render();*/\r\n\r\n\r\n// -----------------------------------------------------------\r\n// Make some variables global so that you can inspect and\r\n// modify objects in your browser's developer console:\r\n// -----------------------------------------------------------\r\n\r\n/*\r\nglobal.reader = reader;\r\nglobal.fullScreenRenderer = fullScreenRenderer;*/\r\n"]}